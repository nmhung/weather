apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    def androidVersions = rootProject.ext.android
    compileSdkVersion androidVersions.compileSdkVersion


    defaultConfig {
        minSdkVersion androidVersions.minSdkVersion
        targetSdkVersion androidVersions.targetSdkVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    flavorDimensions 'environment'
    productFlavors {
        dev {
        }
        prod {
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:29.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api 'com.android.support:cardview-v7:29.0.0'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.4'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'
//    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    api "androidx.core:core-ktx:1.3.1"
    api 'net.fitken:rose:1.0.2'

    def lifecycle_version = "2.2.0"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // alternatively - just ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // For Kotlin use lifecycle-viewmodel-ktx
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // alternatively - just LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
    //     AndroidX libraries use this lightweight import for Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

//    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // For Kotlin use kapt instead of annotationProcessor
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
    // For Kotlin use lifecycle-reactivestreams-ktx

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta8'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    implementation "androidx.paging:paging-runtime:2.1.2"


    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api('com.squareup.retrofit2:converter-gson:2.9.0')
    api('com.squareup.okhttp3:logging-interceptor:4.8.0')

    // Moshi
    api 'com.squareup.retrofit2:converter-moshi:2.9.0'
    api 'com.squareup.moshi:moshi-kotlin:1.9.3'
    api 'com.squareup.moshi:moshi:1.9.3'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.3'



    api "android.arch.lifecycle:extensions:1.1.1"
    kapt "android.arch.lifecycle:compiler:1.1.1"
    api "androidx.fragment:fragment-ktx:1.2.5"
}
repositories {
    mavenCentral()
}
